% 2014 協同產品設計實習報告
% 機械設計工程系二甲
% April 30, 2014

# 前言

協同產品設計實習課程目標[^1]

[^1]: 這是註解的用法.

Here is an inline note.^[Inlines notes are easier to write, since
you don't have to pick an identifier and move down to type the
note.]

學習協同產品設計流程與環境的基本原理與架構.

學習如何在網際專案管理系統的協助下, 進行協同產品設計.

學習如何在協同設計流程中, 進行有效率的工程設計表達與產品資料管理.

延續程式語言與電腦輔助設計實習課程, 學習如何建構協同產品設計環境所需的工具.

# Pandoc 手冊

<http://johnmacfarlane.net/pandoc/README.html>

<http://pages.tzengyuxio.me/pandoc/>

共用圖片統一放在 doc 目錄外的 images/common 目錄中, 千萬不可以將圖片檔案放在 doc 目錄中.

若要將圖片與內文放在一起,  可以在圖片後放一反斜線, 表示與隨後的內文結合在一起.

![中美國旗](./../images/common/c2_w14_task2.png) \

各組 images 存放目錄與引用, 統一放在 doc 目錄外的 images 目錄中 (千萬不可放在 doc 目錄中), 並且按照組別建立子目錄存放.

若是要將圖片獨立為一個 figure, 則不要放連結符號.

![中美國旗](./../images/2ag1/c2_w14_task2.png)

協同產品設計實習專案(2ag1)
===

組員
------------------
40123101

40123102

40123132

OpenShift 網站: http://2014cdag1-cadp13ag6.rhcloud.com/

w8考試
------------------
1.  請寫一個執行時可以列出 9×9 乘法表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.

 *  程式碼:
```python 
    for x in range(0,10):
        for y in range(0,10):
            print(x,'*',y,'=',x*y)
```

 *  解題過程:
 
    打完程式後，之後我把它上傳到bitbucket，git add .→ git commit -m "99"→ git push，之後為了要把99乘法表顯示在openshift CMSimply上，進去openshift CMSimply的資料夾→ wsgi資料夾→ application檔案，在裡面新增一個class 的格式，之後連線FileZilla , 把application檔案覆蓋到app-root/runtime/repo/wsgi的application檔案下，之後進去openshift CMSimply的網站，就顯示99乘法表了。

 *  解題心得:
 
    雖然要打一個99乘法表的程式很快，但要如何顯示在遠端的網頁上，思考了很久，在課堂後請教了TA，最後應用cherrypy的方式，在application檔案，新增一個class 的格式，就完成了。
    
2. 請將上述執行過程錄為 flv 後, 上傳到個人的 Vemeo 空間中, 並將網址回報到各組網站 (dokuwiki 與 CMSimply)與報告中, 並且將相關心得與報告連結登錄到 wiki.mde.tw 第八週的分組頁面中.

 *  Bitbucket 連結:
https://bitbucket.org/40123102/40123102cmsimply/src

 *  Vemeo 空間:
https://vimeo.com/user26935042/videos

 *  copy 空間:
https://copy.com/XohJLdUBRJdk
 *  dokuwiki網站:
https://40123102cdg1dokuwiki-cadp13ag6.rhcloud.com/doku.php?id=start

 *  CMSimply網址:
http://40123102cdg1-cadp13ag6.rhcloud.com/w8test/

3. 請在各組的雲端 dowiki 中,根據下列 40 個帳號與密碼, 新增對應的使用者帳號與密碼後, 將雲端網址登錄在 wiki.mde.tw 各組第八週頁面中, 並說明操作過程與心得後, 將心得整理成 pdf 後繳交到 course@mde.tw.

 *  解題過程:
 
    程式做不出來，只好一個一個建立。

 *  解題心得:
 
    想很久，還是無法想出程式，只好用最勤勞的方法，一個一個建立，唉!!!
    
w9考試
------------------
1. 請寫一個執行時可以列出以十為底對數表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.

 *  程式碼:
```python 
import math
count = 0
text='%04d'
for i in range(100,200+10):
    print(text%round(math.log(i/100,10)*10000,0),end='-')
    count += 1
    if(count == 10):
        print()
        count = 0
```

 *  解題過程:
 
    打完程式後，有顯示出來，但無法顯示表單在CMSimply網址上，只能一個一個慢慢打。

 *  解題心得:
 
    想了很久，還是無法，只會打程式，只好把顯示出來的數字一個一個加上，慢慢打。

2. 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表.

 *  解題過程:
 
    打完程式後，之後我把它上傳到bitbucket，git add .→ git commit -m "w9_2"→ git push，之後為了要把99乘法表顯示在openshift CMSimply上，進去openshift CMSimply的資料夾→ wsgi資料夾→ application檔案，在裡面新增一個class 的格式，之後連線FileZilla , 把application檔案覆蓋到app-root/runtime/repo/wsgi的application檔案下，之後進去openshift CMSimply的網站，輸入 9, 20, 則顯示 9×20 的乘法表.
    
 *  解題心得:
 
    這題跟上週小考差不多，只是還要再新增兩個輸入表單，所以還要在回想一下，但大致上ok，所以完成了。
    
3. 請在各組的雲端 dokuwiki 中, 新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區, 並將連結放在個人第九週頁面.

 *  程式碼:
```python
import hashlib
# convert user_password into sha1 encoded string
def gen_password(user_password):
    return hashlib.sha1(user_password.encode("utf-8")).hexdigest()
text='abc%03d'
for i in range(1,399+1):
    print(text%(i)+':'+gen_password(text%(i))+':'+text%(i)+'@gmail.com:'+text%(i)+'@gmail.com:'+'user')
```

 *  操作過程:
 
    先寫一個程式使他能產生帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料，之後連線到openshift dokuwiki的FileZilla，把產生出來的程式碼貼到app-root/data/conf/users.auth.php下，之後開啟dokuwiki網站即可。

 *  心得:
 
    一開始這個程式需要思考一下，如何使帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶，打出來後還要去讓所產生的程式碼符合一開始的格式，如同users.auth.php，思考很久最後終於成功了。
    
 w12
------------------

 *  第十二週任務:
 
1.  請各組將第八週與第九週考試的摘要報告放入 Github 協同專案中的分組報告區, 並將內容放入各組控管的同步 OpenShift 網站中. (佔期末成績 5分)
2.  請各組設法利用 CherryPy 與 Pro/Web.Link 技術, 在 Github 協同專案中建立一個能夠透過連結或表單控制 Cube 零件, a, b, 或 c 零件尺寸的網際協同程式, 讓使用者可以藉以利用近端的 Creo 嵌入式瀏覽器控制 Cube 的尺寸後列出該零件的體積大小. (佔期末成績 5分)

*  心得:
1.  在URL直接更改參數:在對應的程式內，把迴圈改成可在URL後面輸入變數，EX:http://127.0.0.1:8080/cdag1/cube1?w=20&h=20&l=20
2.  在更改FOR迴圈時切記{}! 在此DEF最下面還有一個括弧要刪除，否則會跑出CATCH

*  組員自評:

    40123101：85分
    
    40123102：95分
    
    40123132：95分
    
w13
------------------

 *  第十三週任務:

1.  請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

2.  請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

3.  請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別? 請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分)

*  40123101心得:

任務1: 

1.  組立時如果使用自動選項，很容易出現組立不成功，譬如你需要重合時他可能會出現相切、距離...等，所以如果已知道自己想要甚麼選項時可先自己選擇。

2.  在組立時建議可將位置拉到你想要的位置附近，才不會有跑掉的狀況。

任務2:  

1.  Vemeo 空間: https://vimeo.com/95823817

2.  copy 空間: https://copy.com/z8hxVmer0fvE

*  40123102心得:

任務1:  

1.  先開啟creo，建立組立檔，依序叫出零件圖的身體、右手、左手、waist、右腳、左腳、頭、帽子，每叫出一個就把它們限制約束，軸和軸或平面和平面，即可完成組裝。

2.  要注意組立順序以及約束的條件。

任務2: 

1.  Vemeo 空間: http://vimeo.com/95836249

2.  copy 空間: https://copy.com/EOsEOAiVn9Vn

*  40123132心得:

任務1:  

1.  手動組樂高零組件，身體每個部位都要用不同關係組起來，有時候組完他角度還會跑掉，之後研究過程都覺得很有趣，大家都笑的很開心，雖然有點生氣。如果組立過程有錯誤或者是刪除的話數值會跑掉。

任務2:  

1.  Vemeo 空間: https://vimeo.com/upload

2.  copy 空間: https://copy.com/Lz78m2CKr8js

*  第1組心得:

任務3:

1.  lego_man 自動組立程式組出來零件的特徵 ID是按照順序組裝的(40~49)；但lego_parts_edu.7z 中下載相同名稱的 lego_man 零件的特徵 ID卻不是按照順序組裝，而是有跳號的現象，這表示他很有可能不是一次就組立起來，在組立過程中，可能有刪除某些零件之類的，已導致沒有按照順序組立。

2.  使用自動組立時較迅速也較準確，只需了解程式內容並修改，還有確認零件黨有放對地方即可。

w14
------------------

 *  第十四週任務:

1.  請以 Creo 開啟 remsub6.asm, 本任務要求各組員以手動組立完成此一零件組立. (5 分)

2.  請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中. (5 分)

3.  請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub6 函式, 當使用者連結至各組雲端網站中的 remsub6, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.(5 分)

*  40123101心得:

任務1: 

1.  這次有很多的零件參雜在一起，所以還要慢慢找檔案很麻煩，更可以理解使用程式的方便性。

任務2:  

1.  Vemeo 空間: https://vimeo.com/96605913

2.  copy 空間: 

*  40123102心得:

任務1:  

1.  比起上週的組立的檔案，這次麻煩許多，尤其在十字零件那地方，無法用軸和軸重合，只能面與面，一樣的方式要做好多次。

任務2: 

1.  Vemeo 空間: https://vimeo.com/96607709

2.  copy 空間: https://copy.com/hK1saWj3Ushr

*  40123132心得:

任務1:  

1.  這次手動組立比上次legoman零件還多一點， 可是比較簡單的是都是軸對齊， 只是零件多過程就只是一直重複軸對齊、面對面。

任務2:  

1.  Vemeo 空間: https://vimeo.com/96578684

2.  copy 空間: https://copy.com/QmbYuA8eynCs

*  第1組心得:

任務3:

1.  還沒做出來，思考中......

w15
------------------

 *  第十五週任務:

1.  請以 Creo 開啟 remsub5.asm, 本任務要求各組員以手動組立完成此一零件組立.(5 分)

2.  請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中. (5 分)

3.  請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub5 函式, 當使用者連結至各組雲端網站中的 remsub5, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.(5 分)

*  40123101心得:

任務1: 


任務2:  

1.  Vemeo 空間: 

2.  copy 空間: 

*  40123102心得:

任務1:  

1.  這次手動組立的檔案，已漸漸熟悉各個零件之間的組合約束，很快就組起來了。

任務2: 

1.  Vemeo 空間: https://vimeo.com/97188832

2.  copy 空間:  https://copy.com/d2svilSZt0TH

*  40123132心得:

任務1:  


任務2:  

1.  Vemeo 空間: 

2.  copy 空間: 

*  第1組心得:

任務3:

1.  還沒做出來，思考中......



網際鼓式煞車設計(2ag2)
===

有關鼓式煞車

程式設計架構
===

鼓式煞車

結果與討論
===

這裡是結果與討論

W12任務(2ag3)
===

請各組將第九週考試的摘要報告放入 Github 協同專案中的分組報告區

摘要報告
===

    第一題：

請寫一個執行時可以列出以十為底對數表的網際 Python 程式，然後 Push 到個人 bitbucket 空間，而且同步指到 OpenShift 個人帳號上執行。

```python 
import math
count = 0
text='%04d'
for i in range(100,200+10):
    print(text%round(math.log(i/100,10)*10000,0),end='-')
    count += 1
    if(count == 10):
        print()
        count = 0
```
    
    解題心得：

可利用程式算出對數的值，就不需要一個一個按計算機。

    第二題：

請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式，接著在乘法表上端加上兩個輸入表單，讓使用者輸入兩個整數，按下送出鍵後，程式會列出以此兩個整數為基底的乘法表，例如：若兩個欄位都輸入: 9，則列出九九乘法表，若輸入 9，20，則列出 9×20 的乘法表。

```python 
class Example(object):
_cp_config = {
# if there is no utf-8 encoding, no Chinese input available
'tools.encode.encoding': 'utf-8',
'tools.sessions.on' : True,
'tools.sessions.st\orage_type' : 'file',
'tools.sessions.locking' : 'explicit',
'tools.sessions.storage_path' : data_dir+'/tmp',
# session timeout is 60 minutes
'tools.sessions.timeout' : 60
}

@cherrypy.expose
def index(self):
    output = ''

    form = '''
    <form action='action'>
    num1:<INPUT type='text' name='num1'>
    num2:<INPUT type='text'  name='num2'>
    <input type=submit>
    <input type=reset>
    </form>
    '''
    output += form
    return output
@cherrypy.expose
def action(self, num1=9, num2=9):
    num1 = int(num1)
    num2 = int(num2)
    output = ''
    for i in range(num1):
        for j in range(num2):
            output += str(i) + '*' + str(j) + '=' + str(i*j) + '<br />'
    return output
```

解題心得：

利用網站輸入值並算出，並需要有兩個輸入表單。


    第三題：

請在各組的雲端 dokuwiki 中，新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料，並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區，並將連結放在個人第九週頁面。

```python 
import hashlib
#convert user_password into sha1 encoded string
def gen_password(user_password):
    return hashlib.sha1(user_password.encode("utf-8")).hexdigest()
text='abc%03d'
for i in range(1,399+1):
    print(text%(i)+':'+gen_password(text%(i))+':'+text%(i)+'@gmail.com:'+text%(i)+'@gmail.com:'+'user')
```

解題心得：

可以利用程式創造多人帳密，一起管理網站，減少一個一個創建帳密，又會有被盜用的風險。


W13任務(2ag3)


1.  請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

2.  請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

3.  請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別? 請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分)

摘要報告
===

組立步驟：

1.建立新的檔案，選擇組立檔。

2.將body零件檔叫出，再將右手臂零件檔叫出，使手臂之軸線與body之軸線重合，並將手臂內側與body邊重合緊貼。

3.左手臂步驟如上。

4.將底座裝上，條件有四個，背部及正面、內部左右兩側需緊靠。

5.裝上右腳，使右腳軸線與底部重合，並將內側緊靠。

6.左腳步驟如上。

7.最後裝上頭部，頭部軸線與body重合，戴上帽子，Lego_man完成。

心得
===

40123104心得：

第一次用creo組立學到很多東西，知道原來用creo組立這麼方便，組完一個小人之後就感到很有成就感哈哈

Vimeo影片：https://vimeo.com/95842802

40123106心得：

任務1：

1.  一開始總不知道要如何將其對正，直到老師教學後，才知道要先對齊基準面。

2.  組立時要隨時注意方向是否正確。

任務2：

1.  Vemeo 空間：https://vimeo.com/95891856

2.  copy 空間：https://copy.com/A7wM7eItawg4

自評分數：70

40123111心得：

第一次使用Creo，覺得比想像中好用，很清楚明瞭的工具列，組立起來也特別輕鬆。

◎Lego_man組立過程Vimeo影片：

Part1:https：//vimeo.com/95846586

Part2:https：//vimeo.com/95846587

自評分數：65

W14任務(2ag3)

任務 1：請以 Creo 開啟 remsub6.asm, 本任務要求各組員以手動組立完成此一零件組立.

任務 2：請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.

任務 3：請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub6 函式, 當使用者連結至各組雲端網站中的 remsub6, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.

摘要報告
===


心得
===


網際鼓式煞車設計(2ag4)
===
github連結
40123107: https://github.com/40123107
40123120: https://github.com/40123120
cdag4: https://github.com/2014cdag4/2014cdag4

cmsimply連結
40123107: https://github.com/40123107
40123120: https://github.com/40123120
40123150: http://cdg4-40123150.rhcloud.com/
===

第九週 
1.(第一題 30%) 請寫一個執行時可以列出以十為底對數表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.
http://cdg4-40123150.rhcloud.com/get_page?heading=%E7%AC%AC%E4%B8%80%E9%A1%8C
2.(第二題 40%) 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表.
http://cdg4-40123150.rhcloud.com/example/
http://vimeo.com/92577008
3.(第三題 30%) 請在各組的雲端 dokuwiki 中, 新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區, 並將連結放在個人第九週頁面.
https://php-40123150.rhcloud.com/doku.php?id=start
http://vimeo.com/92577072
===
w12
請連結 https://github.com/2014cdag4/2014cdag4
===

這裡是結果與討論

網際協同產品設計(2ag5)
期末報告網站：https://2014cdag5-yimin40123157.rhcloud.com
===

◎協同流程架構：
1. 說明：善用各網站所提供的資源, 進行期末專案全班協同管理
2. 近端 USB/Portable hard drive：儲存文件檔案資料 # Leo 程式管理, Pandoc 自動產生文件
3. 遠端 Openshift 網站：免費最多能建立 3 個網頁
4. 遠端 Github 倉儲：專案無限制人數協同, 免費倉儲只能 Public
5. 遠端 Bitbucket 倉儲：免費專案最多 5 人協同, 倉儲能變更 Public/Privacy
===

◎Pro/​Web.Link：
1. 確認近端協同環境版次
2. Leo 4.11, Creo win7 64位元
3. Creo Pro/​Web.Link 透過 javascript 執行 #Creo only IE
4. 設定 Creo “File → Options → Configuration Editor” 底下
5. web_enable_javascript 設為 “on”
6. regen_failure_handling 設為 “resolve_mode”
7. 設定 IE 瀏覽器 “網際網路選項” 底下
8.“安全性 → ✔信任的網站 → 網站 → 新增Pro/​Web.Link網站”
9.“自訂等級 → ActiveX控制項與外掛程式” 所有選項設為 “●啟用”
===

◎git 衝突解決：
1. git pull
2. git reset
3. git add -A
4. git status
5. git commit -m “fix problems”
6. git push

by 2014cdag5 

協同產品設計實習(2ag6)
===

組員
----------
組員：40123109黃芯庭、40123119呂冠緯、40123142楊佳致
小組openshift網站：http://2014cdag6-40123109cd2014.rhcloud.com
小組github網站：https://github.com/2014cdag9/2014cdag6


第八週考試內容
-----------------

(第一題) 請寫一個執行時可以列出 9×9 乘法表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.

(解題過程)

 *  程式碼:
```python 
    for x in range(0,10):
        for y in range(0,10):
            print(x,'*',y,'=',x*y)
```

(第二題) 請將上述執行過程錄為 flv 後, 上傳到個人的 Vemeo 空間中, 並將網址回報到各組網站 (dokuwiki 與 CMSimply)與報告中, 並且將相關心得與報告連結登錄到 wiki.mde.tw 第八週的分組頁面中.


(第三題) (協同計分, 分組進行) 請在各組的雲端 dowiki 中,根據下列 40 個帳號與密碼, 新增對應的使用者帳號與密碼後, 將雲端網址登錄在 wiki.mde.tw 各組第八週頁面中, 並說明操作過程與心得後, 將心得整理成 pdf 後繳交到 course@mde.tw.

第九週考試內容
-----------------

(第一題 30%) 請寫一個執行時可以列出以十為底對數表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.
(解題過程)

 *  程式碼:
```python 
import math
count = 0
text='%04d'
for i in range(100,200+10):
    print(text%round(math.log(i/100,10)*10000,0),end='-')
    count += 1
    if(count == 10):
        print()
        count = 0
```
*openshift連結
https://2014s-40123109.rhcloud.com/get_page?heading=%C2%A0%E7%AC%AC%E4%B9%9D%E9%80%B1

(第二題 40%) 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表.
(解題過程)
#openshift連結
http://2014s-40123109.rhcloud.com/example/
#bitbucket連結
https://bitbucket.org/40123109/40123109cdg6

(第三題 30%) 請在各組的雲端 dokuwiki 中, 新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區, 並將連結放在個人第九週頁面.
(解題過程)
#雲端dokuwiki頁面
http://wiki-40123109.rhcloud.com/doku.php
#vimeo連結
https://vimeo.com/92575709

第十二週任務
--------------
將第八週與第九週考試的摘要報告放入 Github 協同專案中的分組報告區, 並將內容放入各組控管的同步 OpenShift 網站中

第十三週任務
--------------
任務一: 請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位,在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

任務二: 請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

任務三: 請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別? 請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分)

[40123109]

vimeo網站：https://vimeo.com/95870809

copy.com網站：https://copy.com/B4bciHt2pJ3T

心得：在任務一利用手動組樂高零件，因滑鼠按鍵不夠靈敏，常會發生連按而導致定義零件位置時的困難，考慮下次帶自己的滑鼠來使用。
而在組立過程中，掌握了面對齊面以及線與線重合等技巧，就能順利的組立。
自動組立還在了解當中。

第十四週任務
---------------
任務 1 (5 分): 請以 Creo 開啟 remsub6.asm, 本任務要求各組員以手動組立完成此一零件組立.

任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.

任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub6 函式, 當使用者連結至各組雲端網站中的 remsub6, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.

[40123109]

vimeo網站：https://copy.com/B4bciHt2pJ3T

copy.com網站：https://copy.com/B4bciHt2pJ3T

心得：第十四週延續了上個禮拜的組立，這次的零件多了一點，在組立過程中，零件順序和步驟是關鍵，而在零件越來越多、組立步驟越來越複雜的情況下，利用程式組立相對會簡單許多。

[40123142]

心得 : 這週的組立是要組出機器人的其中一個部位，這部分的零件非常多，教室的滑鼠又不怎麼好用，常常在用滑鼠滾輪來調整視角要約束的時候，卻自動幫我連點兩次滾輪，都要在開一次新的零件來約束，這部分花了我不少的時間。

[40123119]

心得 : 這次有別於上一次的樂高人組力，要多約束的零件比較多，還有穿過兩孔軸心的軸，在組立的過程中為了讓兩端軸距近乎相同只能用打出長度(距離)的功能來拿捏，目前還沒有一個好的較精準的約束辦法。

第十五週任務
---------------
任務 1 (5 分): 請以 Creo 開啟 remsub5.asm, 本任務要求各組員以手動組立完成此一零件組立.

任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.

任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub5 函式, 當使用者連結至各組雲端網站中的 remsub5, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.

[40123109]

vimeo連結：https://vimeo.com/97188492

copy連結：https://copy.com/HP2RDvlwid3S

心得 :這是第三週做組立零件的練習，在手動組立的部分已經越來越熟悉，但也感受到步驟的繁複與不方便性，利用程式自動組立減去很多時間，希望能夠盡快了解程式的內容。

[40123119]

心得 : 這次的組立題目比較簡單和好上手，沒有遇到甚麼太大的問題。不過影音的部分在學校或家裡錄的結果都一樣，效果不好，不知道有沒有更好的錄影軟體可以提供使用。

協同產品設計實習專案(2ag7)
===

組員
------------------
40123101

40123102

40123132

OpenShift 網站: http://cmsimply-cdag7.rhcloud.com/
小組Github https://github.com/2014cdag7/2014cdag7

w8摘要
------------------
寫一個執行時可以列出 9×9 乘法表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.
    先在Python上寫出9×9 乘法表程式，之後要用puttygen建立鑰匙，一把存近端，另外存一把在遠端，接下來把Openshift網址clone下來，之後再把application更改，加上example…，之後重新上傳，就能成功輸入表單
https://g7-designteam.rhcloud.com/example/ 
    在各組的雲端 dowiki 中,根據下列 40 個帳號與密碼, 新增對應的使用者帳號與密碼後, 將雲端網址登錄在 wiki.mde.tw 各組第八週頁面中。
https://vimeo.com/92820307 

    
w9摘要
------------------
1. 請寫一個執行時可以列出以十為底對數表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.

2. 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表.
    
3. 請在各組的雲端 dokuwiki 中, 新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區, 並將連結放在個人第九週頁面.

https://vimeo.com/92820307 

    
 w12
------------------

 *  第十二週任務:
 
1.  請各組將第八週與第九週考試的摘要報告放入 Github 協同專案中的分組報告區, 並將內容放入各組控管的同步 OpenShift 網站中. (佔期末成績 5分)
2.  請各組設法利用 CherryPy 與 Pro/Web.Link 技術, 在 Github 協同專案中建立一個能夠透過連結或表單控制 Cube 零件, a, b, 或 c 零件尺寸的網際協同程式, 讓使用者可以藉以利用近端的 Creo 嵌入式瀏覽器控制 Cube 的尺寸後列出該零件的體積大小. (佔期末成績 5分)

*  組員自評:

    49823207：10分
    
    40023207：10分
    
    40123110：10分
    
w13
------------------

 *  第十三週任務:

1.  請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

2.  請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

3.  請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別? 請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分)


w14
------------------

 *  第十四週任務:

1.  請以 Creo 開啟 remsub6.asm, 本任務要求各組員以手動組立完成此一零件組立. (5 分)

2.  請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中. (5 分)

3.  請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub6 函式, 當使用者連結至各組雲端網站中的 remsub6, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.(5 分)

w15
------------------

 *  第十五週任務:

W15 任務 1 (5 分): 請以 Creo 開啟 remsub5.asm, 本任務要求各組員以手動組立完成此一零件組立.

W15 任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.

W15 任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub5 函式, 當使用者連結至各組雲端網站中的 remsub5, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.


網際鼓式煞車設計(2ag8)
===

第八組

組員:黃柏良 
王若嘉

第八週

(第二題) 請將上述執行過程錄為 flv 後, 上傳到個人的 Vemeo 空間中, 並將網址回報到各組網站 (dokuwiki 與 CMSimply)與報告中, 並且將相關心得與報告連結登錄到 wiki.mde.tw 第八週的分組頁面


(第三題) (協同計分, 分組進行) 請在各組的雲端 dowiki 中,根據下列 40 個帳號與密碼, 新增對應的使用者帳號與密碼後, 將雲端網址登錄在 wiki.mde.tw 各組第八週頁面中, 並說明操作過程與心得後, 將心得整理成 pdf 後繳交到 course@mde.tw.
第九週

(第一題 30%) 請寫一個執行時可以列出以十為底對數表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.
(解題過程)

第一題

#程式碼#

python 
import math
count = 0
text='%04d'
for i in range(100,200+10):
print(text%round(math.log(i/100,10)*10000,0),end='-')
count += 1
if(count == 10):
print()
count = 0
#openshift連結
https://2014s-40123109.rhcloud.com/get_page?heading=%C2%A0%E7%AC%AC%E4%B9%9D%E9%80%B1

 

第二題

請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表.

http://cdg8-40123141.rhcloud.com/example/

https://bitbucket.org/40123141/---

第三題

 請在各組的雲端 dokuwiki 中, 新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區, 並將連結放在個人第九週頁面.

http://wiki-40123141.rhcloud.com/doku.php

http://vimeo.com/92589824

第十二週

將第八週與第九週考試的摘要報告放入 Github 協同專案中的分組報告區, 並將內容放入各組控管的同步 OpenShift 網站中

第十三週

任務一: 請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

任務二: 請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

任務三: 請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別? 請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分

第十四週

 任務 1 (5 分): 請以 Creo 開啟 remsub6.asm, 本任務要求各組員以手動組立完成此一零件組立.

 任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.

任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub6 函式, 當使用者連結至各組雲端網站中的 remsub6, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.

vimeo網站：https://vimeo.com/97188658

copy.com網站：https://copy.com/kvxurKiUOb6A


心得：延續上個禮拜的組立，這次的零件麻煩許多，在組立過程中，零件順序和步驟很重要，零件越多、組立步驟越複雜，若能利用程式組立相對會簡單許多。
 
 第十五週

 

W15 任務 1 (5 分): 請以 Creo 開啟 remsub5.asm, 本任務要求各組員以手動組立完成此一零件組立.

W15 任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.

W15 任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub5 函式, 當使用者連結至各組雲端網站中的 remsub5, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.


vimeo網站：https://vimeo.com/97187767

copy.com網站：https://copy.com/1eiLvyWpMkYG


心得：這次的組立很簡單 很好做

協同產品設計實習(cdag9)
===

組員：40123114王瑞豪
組員：40123117吳昱緯
組員：40123127洪宗佑

小組openshift網站：https://2014cadg9-40123114.rhcloud.com/
小組github網站：https://github.com/coursemdetw/2014cda

===
W8考試

1.請寫一個執行時可以列出 9×9 乘法表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.

解題

//
設定一個0到10範圍,y也設定0到10,接著印出x,'*',y,'=',x*y
//
程式碼

    for x in range(0,10):
        for y in range(0,10):
            print(x,'*',y,'=',x*y)
2. 請將上述執行過程錄為 flv 後, 上傳到個人的 Vemeo 空間中, 並將網址回報到各組網站 (dokuwiki 與 CMSimply)與報告中, 並且將相關心得與報告連結登錄到 wiki.mde.tw 第八週的分組頁面中.


3.(協同計分, 分組進行) 請在各組的雲端 dowiki 中,根據下列 40 個帳號與密碼, 新增對應的使用者帳號與密碼後, 將雲端網址登錄在 wiki.mde.tw 各組第八週頁面中, 並說明操作過程與心得後, 將心得整理成 pdf 後繳交到 course@mde.tw.

這題不太會做 只能夠一個一個慢慢輸入

W9考試

1.請寫一個執行時可以列出以十為底對數表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.
解題

程式碼
python 
import math
count = 0
text='%04d'
for i in range(100,200+10):
    print(text%round(math.log(i/100,10)*10000,0),end='-')
    count += 1
    if(count == 10):
        print()
        count = 0
openshift連結
https://2014s-40123114.rhcloud.com/

2. 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表.
解題
#openshift連結
http://2014s-40123114.rhcloud.com/example/
#bitbucket連結
https://bitbucket.org/40123114/40123114cdg9

心得:
這題跟上一週的很相似,只是變更了一下範圍,又學習到了新的東西

(第三題 30%)3.abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區, 並將連結放在個人第九週頁面.
解題

http://wiki-40123114.rhcloud.com/doku.php
#vimeo連結
https://vimeo.com/92575092

心得:
第三題學習到如何用程式去輸入對應資料,不必在一個一個利用手動方式再輸入了

W12
將第八週與第九週考試的摘要報告放入 Github 協同專案中的分組報告區, 並將內容放入各組控管的同步 OpenShift 網站中

W13
王瑞豪
copy:https://copy.com/V9KF1pQSfCxN 
vimeo:http://vimeo.com/95823596

心得:這週是組一個小人偶，起初用起來還滿不容易的但組過之後其實發現並不難，還要加上錄影上傳製作過程


吳昱緯
vimeo:https://vimeo.com/95821387

心得:在這次上課中最主要目的是要讓我們體會到程式組立的意義，在設定好工作平面XY YZ XZ三個平面時，我們可利用程式自動對正，在繪圖過程中就可以預先設定好組裝順序以省去不必要的麻煩，接下來就是電腦建立參數化繪圖，利用第13週的LEGO小人讓我理解程式千變萬化，能夠靈活運用的人才會有競爭力。

W14
40123114王瑞豪
copy:https://www.copy.com/s/8e7X7SG6phCD/40123114_asm.flv 
vimeo:https://vimeo.com/96570659

心得:這禮拜的任務是要手動組立，這跟上禮拜的任務有點相似所以操作起來並沒有那麽陌生，但每次錄影時電腦都會有點當當的，這是點小缺點。用程式組立還是沒辦法成功所以只能拿到10分，下次再加油


40123117 吳昱緯
vimeo:https://vimeo.com/96551880

心得:第14週的目標延續第13週的課程，在LEGO的車子組立零件十分的多，要如何建立正確觀念，用程式幫我們做事情是很重要的，如果只是用人力的方式只是有努力而沒有競爭力，在面對全球競爭下參數化已經是必備的了，要怎麼學好用程式控制參數化繪圖軟體也是現在該學習的目標之一。



cd2ag10報告(2ag10)
====

以下為各週報告

第十組組員(2ag10)
------------------

小組網站:http://goo.gl/aztMHi

40123116-吳羽閔

40123118-吳謦麟

40123153-戴志軒

第八週考試摘要(2ag10)
------------------

小組網站:http://goo.gl/yi3qJ5


2014S CD Week8 <td>
課程教材:

A collaborative writing approach to wikis <td>
Collabrative engine for distributed mechanical design <td>
Web-based collaborative engineering support system <td>
第八週考試題目 <td>
下列題目完成後, 必須(1)將程式碼送到個人的 Bitbucket repository 下(2)程式可在近端與雲端部署執行(3)在 wiki.mde.tw 個人第八週心得中留下 Bitbucket 與雲端執行連結(4)整理出一份小考第一(二, 或三)題的 PDF 檔案, 寄到 course@mde.tw, 標題為: 學號-小考第一(二, 或三)題, 內容必須包含程式碼, 解題過程, 解題心得, Bitbucket 連結, 雲端網址等資料.

(第一題) 請寫一個執行時可以列出 9×9 乘法表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行. <td>
(第二題) 請將上述執行過程錄為 flv 後, 上傳到個人的 Vemeo 空間中, 並將網址回報到各組網站 (dokuwiki 與 CMSimply)與報告中, 並且將相關心得與報告連結登錄到 wiki.mde.tw 第八週的分組頁面中. <td>
(第三題) (協同計分, 分組進行) 請在各組的雲端 dowiki 中,根據下列 40 個帳號與密碼, 新增對應的使用者帳號與密碼後, 將雲端網址登錄在 wiki.mde.tw 各組第八週頁面中, 並說明操作過程與心得後, 將心得整理成 pdf 後繳交到 course@mde.tw.

40 個帳號與密碼 <td>

58B39 , 9J35UAVM<td>
3624D , QANF34CW<td>
7345B , 3PAFXKWZ<td>
358DA , E6RJFKW4<td>
3BC7B , HG2ASNYH<td>
CA55C , XUZTHWQK<td>
D2756 , UHK2W3D2<td>
368B8 , A5QGYA6W<td>
7948A , PF278WDQ<td>
C65C4 , GT4KBCXU<td>
A8964 , 3RPQSW2U<td>
22422 , 7E57K7F3<td>
9A5B4 , 4MVKRE5Z<td>
B5A76 , 3DTAAHUF<td>
57388 , NP39FGXR<td>
8A833 , C7DNBHCQ<td>
29AB8 , 6KMGK73Z<td>
5ABD2 , PV5FH722<td>
86293 , PJ69FBMS<td>
9DCBC , U5HR6QR8<td>
276DD , URE9FNWD<td>
599AA , X2P6CTXF<td>
9C449 , DKRN3V59<td>
64236 , 86UWN3E9<td>
43AAC , MNCJZCAX<td>
73B93 , QX945VJJ<td>
36283 , M3MQGUXD<td>
7447C , TQZVDKPT<td>
C73AB , MSP4GPPX<td>
8284B , XMT8W9RD<td>
62454 , SD4C7V89<td>
44B3C , 636DBRJC<td>
C75CB , M66RMMQ2<td>
4A3CB , FF485EQ4<td>
7D248 , FGJHQDAS<td>
A7CC4 , R47AHA4Y<td>
99BCC , RNQYZGQZ<td>
6DA77 , HRCDP9D8<td>
357AB , CKB4Q2EC<td>
A9525 , JDVX75ST<td>


第八週協同設計練習題目:

建立各組 OpenShift 上的 dokuwiki <td>
http://ethercalc.tw/ Openshift 上的 ethercalc <td>
近端的 ethercalc <td>
用 markdown 編輯電子書: https://github.com/progit/progit , <td> http://johnmacfarlane.net/pandoc/epub.html <td>
期中考試與分組報告必選題 <td>
請以三組共 9 個人的情況下(座位為 3×3 配置), 分析2014s_week3的協同設計題目, 如何配置座位可以得到團隊的最大配分.
假如將組別擴大為五組共 15 人的情況下(座位為 4×4 配置, 則團隊座位安排後的最大配合又是多少? <td>
上課影片
http://vimeo.com/user24079973/videos

第八週報告(2ag10)
------------------

小組網站:http://goo.gl/YCNd7p

```python 
import cherrypy
class HelloWorld(object):
    @cherrypy.expose
    def index(self, var1=9, var2=9):
        # initialize outstring
        outstring = ""
        # initialize count
        count = 0
        d = int(var1)
        e = int(var2)+1
        for i in range(1, d):
            for j in range(1, e):
                count += 1
                #print(count)
                if count%(int(var2)) == 0:
                    outstring += "<td>"+str(i) + "*" + str(j) + "=" + str(i*j) +"</td>"+"</tr>" + "<br />"
                else:
                    outstring += "<td>"+str(i) + "x" + str(j) + "=" + str(i*j) + "</td>"
        return "<table border=2><tr><td>99乘法表</td></tr><tr>"+outstring
#http://127.0.0.1:8080/index?var1=10&var2=20
#"&nbsp;"*4
 
 
cherrypy.quickstart(HelloWorld())
#application=cherrypy.Application(HelloWorld()) #將符號打開上傳openshift即可使用，並刪掉上列
```

以上程式碼即可跑出99乘法表.

9x9openshift: http://9x9-cadp13ag8.rhcloud.com/ (因openshift空間不足，故利用第九週程式，程式碼略有差別，主要為多新增兩個輸入表單，其餘相同)

同步bitbucket: https://bitbucket.org/40123153/input9x9 (同上)

————我是分隔線————

影片(由於網路超慢，怕錄製影片過大所以只錄製最後結果)

https://vimeo.com/92003966

P.S 由於題目理解錯誤，所以上述影片為失效。

第九週考試摘要(2ag10)
------------------

小組網站:http://goo.gl/8nPx2Y

2014S CD Week9 <td>
課程教材:

A collaborative writing approach to wikis <td>
Collabrative engine for distributed mechanical design <td>
Web-based collaborative engineering support system <td>
期中考試題目 <td>
下列題目完成後, 必須(1)將程式碼送到個人的 Bitbucket repository 下(2)程式可在近端與雲端部署執行(3)在 wiki.mde.tw 個人第九週心得中留下 Bitbucket 與雲端執行連結以及其它參考連結(4)整理出一份期中考第一(二, 或三)題的 PDF 檔案, 寄到 course@mde.tw, 標題為: cda_學號_姓名_期中考第一(二, 或三)題(乙班將 cda 改為 cdb), 內容必須包含程式碼, 解題過程, 解題心得, Bitbucket 連結, 雲端網址等資料.

(第一題 30%) 請寫一個執行時可以列出以十為底對數表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行. <td>
(第二題 40%) 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表. <td>
(第三題 30%) 請在各組的雲端 dokuwiki 中, 新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區, 並將連結放在個人第九週頁面. <td>
第一題參考資料: 對數表與應用, 當 x=10, 對應到 0 行的值, 表示要對 1.00 取以十為底的對數, 所得到的值為 math.log(1.00, 10)=0, 而 x=10 對應到 1 行的值, 表示要對 1.01 取以十為底的對數, 所得到的值為 math.log(1.01, 10)=0.004321373782642578 然後再乘上 10000, 並且只取整數, 所以對應表的值為 43, 也就是表中的 0043, 當 x=20, 而且對應到第 9 行的值, 則為 math.log(2.09, 10)=0.32014628611105395, 然後再乘上 10000, 只取整數, 所以對應表上的值為 3201.

第一題參考: Python 中 str() 可以將整數或浮點數轉為字串, int() 則可以將字串轉為整數, round(1.0123, 2) 表示只取小數點後兩位, math.log(x, 10) 表示對 x 取以 10 為底的 log 值, html 表格請參考.

期中成績評量 <td>
請各組依據2014s_week7中的說明完成期中報告.(最後繳交期限為 2014.4.26 晚上 12:00) <td>
成績評量時, 將依據各組在 wiki.mde.tw 中的頁面進行評量, 期中成績包括平時成績(參考個人自評成績)、第八週考試與期中考試成績、期中報告成績等. <td>
上課影片
http://vimeo.com/user24079973/videos


第九週報告(2ag10)
------------------

小組網站:http://goo.gl/Hy7Ktn

第一題:

Log以10為底之表單openshift: http://log-cadp13ag8.rhcloud.com/

bitbucket: https://bitbucket.org/40123153/log10-1.00-1.99

因為迴圈關係，多了一個21…還在更新中。(解決)

P.S已利用elif判斷式將最後的21給剃除！

當在最後20的地方下elif將<tr>給剃除，故不在往下做表格及列印出21數字。

```python 
import cherrypy
import os
import math
# 1. 導入所需模組

# 2. 設定近端與遠端目錄
# 確定程式檔案所在目錄, 在 Windows 有最後的反斜線
_curdir = os.path.join(os.getcwd(), os.path.dirname(__file__))
# 設定在雲端與近端的資料儲存目錄
if 'OPENSHIFT_REPO_DIR' in os.environ.keys():
    # 表示程式在雲端執行
    download_root_dir = os.environ['OPENSHIFT_DATA_DIR']
    data_dir = os.environ['OPENSHIFT_DATA_DIR']
else:
    # 表示程式在近端執行
    download_root_dir = _curdir + "/local_data/"
    data_dir = _curdir + "/local_data/"
 
# 3. 建立主物件
class HelloWorld(object):
    @cherrypy.expose
    def index2(self, input1=None, input2=None):
        return "Hello world!"+str(input1)
    @cherrypy.expose
    def inputform(self, input1=None, input2=None):
        return "input form"+str(input1)
    #index.exposed = True
    @cherrypy.expose
    def index(self):
        out=""
        c = 0
        k = 0
        for i in range(0,11):
            for j in range (0,10):
                k += 1
                c = 10 + i
                d = c/10+j/100
                e = (int(math.log(d,10)*10000))
                if (k%10 == 0 and k<=100):
                    out += "<td>"+str(e)+"</td></tr><td>"+str(c+1)+"</td><br />"
                elif k%100 == 0:
                    out += "<td>"+str(e)+"</td><br />"
                else:
                    out +="<td>"+str(e) + "</td>"
                #print("log=",int(math.log(d,10)*10000))
            #print("\n")
        return "<table border=1><tr><td>x</td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td></tr><td>"+"10"+"</td>"+out
 
# 4. 安排啟動設定
# 配合程式檔案所在目錄設定靜態目錄或靜態檔案
application_conf = {'/static':{
        'tools.staticdir.on': True,
        'tools.staticdir.dir': _curdir+"/static"},
        '/downloads':{
        'tools.staticdir.on': True,
        'tools.staticdir.dir': data_dir+"/downloads"}
    }
 
# 5. 在近端或遠端啟動程式
# 利用 HelloWorld() class 產生案例物件
root = HelloWorld()
# 假如在 os 環境變數中存在 'OPENSHIFT_REPO_DIR', 表示程式在 OpenShift 環境中執行
if 'OPENSHIFT_REPO_DIR' in os.environ.keys():
    # 雲端執行啟動
    application = cherrypy.Application(root, config = application_conf)
else:
    # 近端執行啟動
    '''
    cherrypy.server.socket_port = 8083
    cherrypy.server.socket_host = '127.0.0.1'
    '''
    cherrypy.quickstart(root, config = application_conf)
```
 
————我是分隔線————

第二題:

9×9乘法表，並且有兩input可以改變9×9乘法表的範圍。例：input:9 and 20 則為9×20乘法表。

openshift: http://9x9-cadp13ag8.rhcloud.com/ (備註:i為前值，j為後值)

bitbucket: https://bitbucket.org/40123153/input9x9

```python 
import cherrypy
class HelloWorld(object):
    @cherrypy.expose
    def index(self, var1=9, var2=9):
        # initialize outstring
        outstring = ""
        # initialize count
        count = 0
        d = int(var1)+1
        e = int(var2)+1
        for i in range(1, d):
            for j in range(1, e):
                count += 1
                if count%int(var2) == 0:
                    outstring += "<td>"+str(i) + "*" + str(j) + "=" + str(i*j) +"</td>"+"</tr>" + "<br />"
                else:
                    outstring += "<td>"+str(i) + "x" + str(j) + "=" + str(i*j) + "</td>"
        return "<table border=3><tr><td>99乘法表</td></tr><tr>"+outstring+'''<br/><form method="POST" action="index">
                i 我是前值:<input type="text" name="var1"><br />
                j 我是後值:<input type="text" name="var2"><br />
                <input type="submit" value="send">
                </form>
                '''
#http://127.0.0.1:8080/index?var1=10&var2=20
 
 
#cherrypy.quickstart(HelloWorld())
application=cherrypy.Application(HelloWorld())
```

————我是分隔線————

第三題:

新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399。

影片解說: https://vimeo.com/92574166

首先，我們必須要先有abc001~abc399的帳號密碼值，故先用程式迴圈跑出。 (因為懶得寫輸出檔，或者是不熟悉所以不冒險去寫。）

將值複製至文件內將空白修掉，利用EXCEL把密碼在複製至B欄位。存成CSV檔

同樣利用文件將逗點修掉(如果沒記錯空白處為一個TAB，為了安全還是複製之前的。)

再利用程式，修改讀取的文件，將密碼處改為數列[1](數列第一資料行位為[0]，第二資料故為[1])

跑出user之後利用FZ將檔案覆蓋，則可以在雲端上登錄。(為了確認完全傳入，將abc001改為管理權限，確認帳號輸入)

dokuwiki_openshift: http://dokuwiki-cadp13ag8.rhcloud.com/doku.php

bitbucket: https://bitbucket.org/40123153/dokuwiki_abc

第三題的程式碼實在不知道要打什麼….

第十二週報告(2ag10)
------------------

小組網站:http://goo.gl/28PW52

第十二週任務

請各組將第八週與第九週考試的摘要報告放入 Github 協同專案中的分組報告區, 並將內容放入各組控管的同步 OpenShift 網站中. (佔期末成績 5分) 

github小組倉儲:https://github.com/2014cdag10

github大分組倉儲:https://github.com/coursemdetw/2014cda
 
請各組設法利用 CherryPy 與 Pro/Web.Link 技術, 在 Github 協同專案中建立一個能夠透過連結或表單控制 Cube 零件, a, b, 或 c 零件尺寸的網際協同程式, 讓使用者可以藉以利用近端的 Creo 嵌入式瀏覽器控制 Cube 的尺寸後列出該零件的體積大小. (佔期末成績 5分) <td>
1.  Creo 必須使用 64 位元版本 (配合 Windows 7 操作系統) <td>
2.  Creo web_enable_javascript 設為 on, regen_failure_handling 設為 resolve_mode <td>
3.  IE→工具→網際網路選項→安全性→信任的網站→自訂等級 允許信任網站執行 ActiveX <td>
4.  cda 專案必須將http://cdag10-40123153.rhcloud.com/設為信任網站 <td>
5.  開啟 Creo 2.0, 建立一個 cube, relations: d0 = a, d1 = b, d2 = c (a, b, c 為 local parameters) <td>
6.  然後在嵌入式 IE, 連接到 http://cdag10-40123153.rhcloud.com/cdag10/cube10  (#在parameter中將函式名稱改為cube10) <td>
7.  執行  http://cdag10-40123153.rhcloud.com/cdag10/fourbar10 (#在parameter中將函式名稱改為fourbar10) 之前則需要先下載四連桿零件放在 V:\home\fourbar 目錄中, 並開啟一個空的組立檔案, 執行時 Pro/Web.Link 程式會自動進行連桿組立. <td>
8.  Pro/Web.Link 應用: http://www.ptc.com/company/news/inprint/taiwan/proe5.htm <td>
9.  參考資料: http://inversionconsulting.blogspot.tw/search/label/WebLink
 

首先必須將creo 2.0 的 config.pro檔做些設定，必須要將regen_failure_handing設為resolv_mode，使他能重繪。

再來必須將web_enable_javascript設為on，這樣才能讓javascript可以動作。

＃很重要！！這將會成為成功與失敗的原因....

並且將IE關於ActiveX都通通啟用，將http://cdag10-40123153.rhcloud.com/設為例外網頁。

再來就是繪圖，將零件的三個尺寸設關係式，d0=a , d1=b , d2=c。

所有前置動作都完成了，再來就是利用creo裡面內建的IE跑囉！

將http://cdag10-40123153.rhcloud.com/cdag10/cube10貼至IE的url中，就會開始跑囉！

(原始尺寸為150x150x150的方塊)


第一次:3375000

第二次:4096000

第三次:4913000

第四次:5832000

第五次:6859000


大致上就這樣吧...不過 c變數 忘記動到...不過只是照a與b同樣的型式...將a或b複製下來改成c就可以三軸同動了。

第十二週評分(2ag10)
------------------

40123116 : 10分

40123118 : 10分

40123153 : 10分


第十三週考試(2ag10)
------------------

小組網站:http://goo.gl/til1Nq

https://vimeo.com/95823422 copy.com: https://copy.com/P9fGFaLSlQqx

https://vimeo.com/95823554 copy.com: https://copy.com/1pnPvVduOJ9B

任務一: 請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

任務二: 請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

任務三: 請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別? 請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分)

主要任務: 了解各組員對於課程內容的了解 (採每一組員分別完成任務進行測試)

協同環境與架構

實際操作

Creo 零件手動組立

Creo 零件參數手動設定

Creo 零件參數網際變更

Creo 零件自動組立

lego_man.7z

lego_parts_edu.7z

weblink user guide.pdf

第十三週報告(2ag10)
------------------

小組網站:http://goo.gl/QFJp5F

因為只有說利用creo，但並沒限定使用Parametric或Direct.
所以利用Direct必較人性化...所以用Direct組立(主要是沒有順序問題!)

首先載入身體，放置在任意座標.

在載入左、右手臂，利用同心圓及重合將其組上.(注意面的位子，將要組的面先轉至要組上的面的方向)

之後將手載入兩根，利用同心圓及重合組在手臂前端.

將下盤組在身體上，利用三個平面的重合即可.

完成後將左、右腳利用同心圓及重合組在下盤兩端.(注意面的位子，將要組的面先轉至要組上的面的方向)

載入頭部，同樣利用同心圓及重合組在身體上(注意孔大小)

載入帽子，利用三個重合即可(第一個是曲面的重合，中間平面的重合、下平面的重合)

 
小組vedio:  https://vimeo.com/95822338
 
小組copy.com: http://goo.gl/K1nh1G
 
 
 　lego_man 自動組立程式組出來的Feat ID是順序的40 41 42 ...一個一個零件載入裝配.
　而lego_parts_edu.7z 中下載相同名稱的 lego_man 零件卻不是這樣順序的...
　這代表他並不是一次就組起來，可能途中有改變、刪除什麼的.
 
自動組立的某些限制條件或許沒訂得很好，動作有點好笑！

P.S 自動組立不支援creo 2.0 M70(x64)版本，會跑出錯誤！只可以用於M60(x64)版本

P.S2  無法將man.py程式移植到我們(cdag10)小組網頁中，也就是說無法利用 https://cdag10-40123153.rhcloud.com/cdag10/man/開啟...(w14解決)

更無法利用https://cdag10-40123153.rhcloud.com/cdag10/man/assembly來跑自動組立.

(可以利用https://cdag10-40123153.rhcloud.com/cdag30/man/assembly 來跑自動組立。)

第十三週評分(2ag10)
------------------

40123116 : 15分

40123118 : 15分

40123153 : 15分


第十四週任務(2ag10)
------------------

小組網站: http://goo.gl/XvWaup

2014S CD Week14

課程教材:

A collaborative writing approach to wikis
Collabrative engine for distributed mechanical design
Web-based collaborative engineering support system
第十四週任務
請下載 lego_parts.7z , 解開壓縮檔案後, 將資料放入 V:\home\lego 目錄中.

W14 任務 1 (5 分): 請以 Creo 開啟 remsub6.asm, 本任務要求各組員以手動組立完成此一零件組立.

W14 任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.

W14 任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub6 函式, 當使用者連結至各組雲端網站中的 remsub6, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.

以下為參考資料:

Robot Educator Model 協同自動組立 (instruction)

nxt_all_lessons.pdf

http://www.education.rec.ri.cmu.edu/fire/fire-partners/4h/reference/slideshows/rem.html


第十四週報告(2ag10)
------------------

小組網站: http://goo.gl/K7RFOL

任務一 :

利用Direct組立(因為使用起來比較人性化，又沒限制軟體，故用此軟體).

將beam_angle載入，任意放置在空間中.

將axle_10載入，將他以圓弧中心線與beam_angle之孔圓弧中心線重合.

再將一面與孔中一面重合，利用端面與端面的距離，將它限制.
(Beam_angle的寬為8.065，axle_10長為80.65.

故距離相距為36.2925(原本想使用中間平面重合，但direct好像沒辦法定義新平面，我認為Parametric是可以做到定義新平面，使他們中間平面重合.)

將axle_5載入，同樣與axle_10方法一樣.
(Axle_5長為40.325.

將Crossblock_2載入，與axle_10和axle_5方法相同，但沒有找中間平面問題，直接重合貼上在beam_angle之一平面.

Bushing載入，方法與crossblock_2一樣.

Conn_3載入，利用同心圓與平面重合至Crossblock_2.

Beam_3載入，利用同心圓與平面重合至Conn_3.

大致上就以上步驟，一樣不外乎就是重合、同心圓.

同樣，使用direct組立，那麼在組裝之前必須先將位子轉好，因組立不能利用反轉功能.

任務二 :

小組 : video:https://vimeo.com/96551143

小組copy(PDF) : https://copy.com/b9hDHdVQVGyD

小組copy : https://copy.com/m122NKMBQHeB

任務三 : 

編輯進行中。

第十四週評分(2ag10)
------------------

小組網站: http://goo.gl/1VB3M0

40123116 : 10

40123118 : 10

40123153 : 10

第十五週任務(2ag10)
------------------

2014S CD Week15

協同產品設計實習第十五週

課程教材:

A collaborative writing approach to wikis

Collabrative engine for distributed mechanical design

Web-based collaborative engineering support system

第十五週任務

請下載 lego_parts.7z orlego_parts.7z, 解開壓縮檔案後, 將資料放入 V:\home\lego 目錄中.

W15 任務 1 (5 分): 請以 Creo 開啟 remsub5.asm, 本任務要求各組員以手動組立完成此一零件組立.

W15 任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.

W15 任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub5 函式, 當使用者連結至各組雲端網站中的 remsub5, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.

第十五週報告(2ag10)
------------------

１.W15 任務 1 (5 分): 請以 Creo 開啟 remsub5.asm, 本任務要求各組員以手動組立完成此一零件組立.

    首先載入beam_7放置在三維空間中任意區(如有需要可以與組合圖的三個平面重合).

    載入axle_3，與beam_7做孔重合及一對稱重合(端面與beam_7之一平面相距8.065mm).

    載入axle_extender，同樣做軸線重何及孔內一平面重合(角度對正)，再端面與beam_7一平面重合，另一邊同樣.

    載入axle_red，同樣軸線重合及軸上一平面與axle_extender之空內一平面重合(角度對正)，其端面再與axle_3之端面重合，另一邊同樣.

    載入conn_axle_female，做孔內兩平面重合[取代軸線重合(不知道為什麼好像不能用軸線重合)]，端面再與axle_extender之端面平面重合，另一邊同樣.

    載入beam_angle_4x2，轉角處之空與conn_axle_female之軸重合，之後再做平面重合使他貼上去.

    載入conn之軸與beam_angle_4x2短邊孔做重合，conn之中間凸起處之一平面與beam...4x2之孔內平面做平面重合.

 

２.W15 任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同    報告中.

    小組video : https://vimeo.com/97187718

    小組copy(影片): https://copy.com/VCsFtTNeRloE

    小組copy(PDF): https://copy.com/f3Myu2zpvSKE

 

３.W15 任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub5 函式, 當使用者連結至各組雲端網站中的     remsub5, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.

同十四週...


cd2ag11報告(2ag11)
====

以下為各週報告

第十一組組員(2ag11)
====

小組網站:http://40123121-cadp13ag1.rhcloud.com/

40123121-李啟揚

40123129-高永城

40123133-梁智皓

解說部份的圖詳見小組網站

W8

1.(第一題)
 

程式碼:
 
for i in range(1,10):
   for j in range(1,10):
      print('%2.d*%2.d=%2.d'%(i,j,i*j),end=" ")
   print('')
 
解題過程:首先建立i從1到10的for迴圈與j從1到10的for迴圈，在print相應的數字。
 
心得:在考試中發現有很多不太了解的地方，
第一個不了解的就是該如何完成題目要要
求，經過很長時間的思考仍然有困難，請益了很多相關網站終於有一點發現，不過還是不足以完成題目要求的內容，礙於時間上的關係只能交出小小的成果
 
 
1.(第三題)
 
程式碼:
 
import hashlib
import string
import random
 
''' sha1 secure hashes '''
 
# convert user_password into sha1 encoded string
def gen_password(user_password):
    return hashlib.sha1(user_password.encode("utf-8")).hexdigest()
 
# generate random user password
def user_password(size=6, chars=string.ascii_uppercase + string.digits):
    return ''.join(random.choice(chars) for _ in range(size))

def gen_users_auth_php(stud_list_filename, outputdir, sep):
    # read lines from file
    #lines = open("2b_stud_list.txt", "r", encoding="utf-8").read().splitlines()
    lines = open(stud_list_filename, "r", encoding="utf-8").read().splitlines()
    # we may also need to notice every user with computer generated passwords
    file_header = '''
# users.auth.php
# <?php exit()?>
# Don't modify the lines above
#
# Userfile
#
# Format:
#
# login:passwordhash:Real Name:email:groups,comma,seperated
# smd5 admin:$1$BtiJLaL9$q3Zy/VE8X5VrEMsR.XWdj1:admin:admin@gmail.com:admin,user

admin:$1$BtiJLaL9$q3Zy/VE8X5VrEMsR.XWdj1:admin:admin@gmail.com:admin,user
'''
    outputfile = open(outputdir+"/users.auth.php", "w", encoding="utf-8")
    outputfile.write(file_header)
    for i in range(len(lines)):
       # password = user_password(8, "ABCDEFGHJKMNPQRSTUVWXYZ23456789")
        password = lines[i].split("\t")[1]
        user_account = lines[i].split("\t")[0]
        computer_generated_password = password
        sha1_password = gen_password(password)
        real_name = lines[i].split("\t")[0]+"@gm.nfu.edu.tw"
        email = lines[i].split("\t")[0]+"@gm.nfu.edu.tw"
        groups = "user"
        accou = user_account.lower()
        print(accou)
    
    
        print(lines[i].split("\t")[0], "-", password, "-", gen_password(password), \
                "-", lines[i].split("\t")[1])
                

        print(password)
        line_to_write = accou+sep+sha1_password+sep+real_name+sep+email+sep+groups+"\n"
        outputfile.write(line_to_write)
    outputfile.close()

# call gen_users_auth_php() to generate users_auth.php file
gen_users_auth_php("abc.txt", "./", sep=":")
print("done")
 
說明過程:由程式藉由文字文件(.txt)的帳號與密碼，產生users.auth.php後，由FZ傳至/var/lib/openshift/534c9adee0b8cdb4e600017b/app-root/data/conf並且取代原來的users.auth.php即成功，要注意產生後admin的權限問題，並且要及時更改密碼，才能確保安全問題。

W9

第二題: 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同 的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表. 

 網站 : http://test-cadp13ag1.rhcloud.com/example/(後來因openshift不夠用已刪除此網)
 
 在 OPENSHIFT 創立新網頁並 CLONE 下來 之後在把載好的 CM 網站覆蓋進去 並把 WSGI 資料夾裡面的 application 替換成自己做的 
 
 第三題: 請在各組的雲端 dokuwiki 中, 新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區, 並將連結放在個人第九週頁面.

網站 :http://40123121wiki-cadp13ag1.rhcloud.com/doku.php?id=start

 

先用 excel產生文件檔

再將python程式碼完成

配合文件檔來產生 users.auth.php檔案

使用鑰匙搭配 FileZilla 軟體將產生的 users.auth.php上傳至app-root/data/conf下

之後就能用產生的 帳號密碼登入自己前創wiki網站

W13

任務一: 請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

任務二: 請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

任務三: 請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別? 請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分)

首先載入身體

再載入左右手給定限制條件並組裝

依此再給它裝手掌

再來是裝腰部和雙腳

最後補個頭和帽子給它及組裝完成

組裝詳細過程

40123121:https://vimeo.com/95875254

40123129:https://vimeo.com/95875255

40123133:https://vimeo.com/95866667


W14

用W13的經驗可以快速上手

先載入beam_angle.prt

接下來都用限制條件方式組裝

依序用axle_10.prt裝入beam_angle.prt較長那頭

crossblock_2.prt裝在axle_10.prt兩邊並與beam_angle.prt面接觸

axle_5.prt裝在beam_angle.prt另一頭

crossblock_2.prt裝在axle_5.prt兩邊各2個

conn_3.prt裝在beam_angle.prt較長那邊的crossblock_2.prt

最後裝入beam_3.prt固定

組裝詳細過程

40123121:https://vimeo.com/96595415

40123129:https://vimeo.com/96583000

40123133:

W15

第十五週任務
請下載 lego_parts.7z orlego_parts.7z, 解開壓縮檔案後, 將資料放入 V:\home\lego 目錄中.

W15 任務 1 (5 分): 請以 Creo 開啟 remsub5.asm, 本任務要求各組員以手動組立完成此一零件組立.

W15 任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 並將個人心得與相關連結放入各組協同報告中.

W15 任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub5 函式, 當使用者連結至各組雲端網站中的 remsub5, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.

首先載入主體beam_7.prt

再用限制條件在上面的孔放入axle_3.prt

之後再導入兩個axle_extender.prt放到左右兩邊

一樣繼續在左右兩邊導入axle_red.prt並加入限制條件

conn_axle_female.prt也導入兩個放置在左右兩邊

在其中一邊放入beam_angle_4x2.prt

最後再補上conn.prt到beam_angle_4x2.prt上面的孔

自動組立依然在研究中...

組裝詳細過程

40123121:https://vimeo.com/97187351

40123129:https://vimeo.com/97187125

40123133:https://vimeo.com/97188023


網際鼓式煞車設計(2ag12)
===

有關鼓式煞車

程式設計架構
===

鼓式煞車

結果與討論
===

這裡是結果與討論

協同產品設計實習專案(2ag13)
===

組員：
------------------
40123155

40123124

40123138

OpenShift 網站: https://python-40123124.rhcloud.com/get_page?heading=%3Cspan%3E%E6%9C%9F%E4%B8%AD%E8%80%83%3C/span%3E


* bitbucket網站:
https://40123155@bitbucket.org/40123155/---.git

* dokuwiki網站:
http://dokuwiki-40123155.rhcloud.com

* vimeo網站:
https://vimeo.com/user26959367

* CMSimply 網站:
https://python-40123124.rhcloud.com

*  下載網站:
https://copy.com/SjKQ8LHZpVFq

* HTML網站:
http://dokuwiki-40123155.rhcloud.com/lib/exe/fetch.php?media=%E6%9C%9F%E4%B8%AD%E5%A0%B1%E5%91%8A.pdf

http://dokuwiki-40123155.rhcloud.com/lib/exe/fetch.php?media=%E8%AA%B2%E7%A8%8B%E6%95%99%E6%9D%90%E4%B8%80%E7%BF%BB%E8%AD%AF_.pdf

http://dokuwiki-40123155.rhcloud.com/lib/exe/fetch.php?media=%E8%AA%B2%E7%A8%8B%E6%95%99%E6%9D%90%E4%BA%8C%E7%BF%BB%E8%AD%AF.pdf


 組員自評:

    40123155：80分
    
    40123124：70分
    
    40123138：75分







第十二週

請各組將第八週與第九週考試的摘要報告放入 Github 協同專案中的分組報告區, 並將內容放入各組控管的同步 OpenShift 網站中. (佔期末成績 5分)

考試摘要     http://dokuwiki-40123155.rhcloud.com/doku.php



第十三週

任務一: 請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

任務二: 請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

任務三: 請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 
請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別
請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分)


40123124 一開始組合的時候不太熟悉,因為不常使用creo這個繪圖軟體,可是慢慢的熟能生巧之後,
一下子就完成了,只是過程有許多小細節要注意, 像是面和面、軸和軸的對應要正確,如此一來,接合就會非常順利。

40123138 第一次接觸到零件組立，相當不熟悉，
但是摸索了一下子就會將LogoMan已條件限制的方式接合起來，過程中覺得還滿有趣的。

40123155 CREO組件時要把相關的接起 要非常注意設定定位
因為找錯會無法連接正確 組起樂高機器人後 對於CREO的使用
如何應用組合 有點了解 重點就是不要找錯條線找錯面 就成功一半 
剩下的就是自己判斷正確 不要失誤 就可組合成功

40123155十三週影片  http://vimeo.com/96494026



第十四週
任務 1 (5 分): 請以 Creo 開啟 remsub6.asm, 本任務要求各組員以手動組立完成此一零件組立.

任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 
並將個人心得與相關連結放入各組協同報告中.

任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub6 函式, 
remsub6, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.


40123155十四週影片  https://vimeo.com/96591689



﻿協同產品設計實習專案(2ag14)
===

w8

第八週考試題目
下列題目完成後, 必須(1)將程式碼送到個人的 Bitbucket repository 下(2)程式可在近端與雲端部署執行(3)在 wiki.mde.tw 個人第八週心得中留下 Bitbucket 與雲端執行連結(4)整理出一份小考第一(二, 或三)題的 PDF 檔案, 寄到 course@mde.tw, 標題為: 學號-小考第一(二, 或三)題, 內容必須包含程式碼, 解題過程, 解題心得, Bitbucket 連結, 雲端網址等資料.

(第一題) 請寫一個執行時可以列出 9×9 乘法表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行

'''
<table border="1">
<tbody>
<tr>
<td>1*1=1</td>
<td>1*2=2</td>
<td>1*3=3</td>
<td>1*4=4</td>
<td>1*5=5</td>
<td>1*6=6</td>
<td>1*7=7</td>
<td>1*8=8</td>
<td>1*9=9</td>
</tr>
<tr>
<td>2*1=2</td>
<td>2*2=4</td>
<td>2*3=6</td>
<td>2*4=8</td>
<td>2*5=10</td>
<td>2*6=12</td>
<td>2*7=14</td>
<td>2*8=16</td>
<td>2*9=18</td>
</tr>
<tr>
<td>3*1=3</td>
<td>3*2=6</td>
<td>3*3=9</td>
<td>3*4=12</td>
<td>3*5=15</td>
<td>3*6=18</td>
<td>3*7=21</td>
<td>3*8=24</td>
<td>3*9=27</td>
</tr>
<tr>
<td>4*1=4</td>
<td>4*2=8</td>
<td>4*3=12</td>
<td>4*4=16</td>
<td>4*5=20</td>
<td>4*6=24</td>
<td>4*7=28</td>
<td>4*8=32</td>
<td>4*9=36</td>
</tr>
<tr>
<td>5*1=5</td>
<td>5*2=10</td>
<td>5*3=15</td>
<td>5*4=20</td>
<td>5*5=25</td>
<td>5*6=30</td>
<td>5*7=35</td>
<td>5*8=40</td>
<td>5*9=45</td>
</tr>
<tr>
<td>6*1=6</td>
<td>6*2=12</td>
<td>6*3=18</td>
<td>6*4=24</td>
<td>6*5=30</td>
<td>6*6=36</td>
<td>6*7=42</td>
<td>6*8=48</td>
<td>6*9=54</td>
</tr>
<tr>
<td>7*1=7</td>
<td>7*2=14</td>
<td>7*3=21</td>
<td>7*4=28</td>
<td>7*5=35</td>
<td>7*6=42</td>
<td>7*7=49</td>
<td>7*8=56</td>
<td>7*9=63</td>
</tr>
<tr>
<td>8*1=8</td>
<td>8*2=16</td>
<td>8*3=24</td>
<td>8*4=32</td>
<td>8*5=40</td>
<td>8*6=48</td>
<td>8*7=56</td>
<td>8*8=64</td>
<td>8*9=72</td>
</tr>
<tr>
<td>9*1=9</td>
<td>9*2=18</td>
<td>9*3=27</td>
<td>9*4=36</td>
<td>9*5=45</td>
<td>9*6=54</td>
<td>9*7=63</td>
<td>9*8=72</td>
<td>9*9=81</td>
</tr>
</tbody>
</table>
''' 



(第二題) 請將上述執行過程錄為 flv 後, 上傳到個人的 Vemeo 空間中, 並將網址回報到各組網站 (dokuwiki 與 CMSimply)與報告中, 並且將相關心得與報告連結登錄到 wiki.mde.tw 第八週的分組頁面中.


(第三題) (協同計分, 分組進行) 請在各組的雲端 dowiki 中,根據下列 40 個帳號與密碼, 新增對應的使用者帳號與密碼後, 將雲端網址登錄在 wiki.mde.tw 各組第八週頁面中, 並說明操作過程與心得後, 將心得整理成 pdf 後繳交到 course@mde.tw.

'''
import hashlib
 
''' sha1 secure hashes '''
st_date =[] 
 
def gen_password(user_password):
    return hashlib.sha1(user_password.encode("utf-8")).hexdigest()
 
with open("test.txt", "wt") as out_file:
    with open("2014.txt", "r", encoding="utf-8")as in_file:
        for index in in_file:
 
            number, name =index.strip().split(' ')
            mail=number+"@gm.nfu.edu.tw"
            print(number,name)
            st_date.append([number, name, mail])
            out_file.write(str(number)+":"+gen_password(str(number))+":"+str(mail)+":user"+"\n")
'''


===
w9



 

期中考試題目
下列題目完成後, 必須(1)將程式碼送到個人的 Bitbucket repository 下(2)程式可在近端與雲端部署執行(3)在 wiki.mde.tw 個人第九週心得中留下 Bitbucket 與雲端執行連結以及其它參考連結(4)整理出一份期中考第一(二, 或三)題的 PDF 檔案, 寄到 course@mde.tw, 標題為: cda_學號_姓名_期中考第一(二, 或三)題(乙班將 cda 改為 cdb), 內容必須包含程式碼, 解題過程, 解題心得, Bitbucket 連結, 雲端網址等資料.

(第一題 30%) 請寫一個執行時可以列出以十為底對數表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift個人帳號上執行.

 程式 : https://bitbucket.org/40123136/444
 
 
 (第二題 40%) 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表.       (第三題 30%) 請在各組的雲端 dokuwiki 中, 新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區, 並將連結放在個人第九週頁面.
 
程式 : https://bitbucket.org/40123136/99
 
 
(第三題 30%) 請在各組的雲端 dokuwiki 中, 新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料, 並將製作過程與驗證流程拍成 flv 後上傳到個人的Vimeo  資料區, 並將連結放在個人第九週頁面.
 
Vimeo : https://vimeo.com/92577999
 
 
 

Bitbucket

https://bitbucket.org/40123136/444
https://bitbucket.org/40123136/99

OpenShift

http://cda14-40123136.rhcloud.com/
http://python-cadpag5.rhcloud.com/
https://2014a14-40123136.rhcloud.com/


Vimeo

https://vimeo.com/92577999


===
w13


任務一: 請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

1.開啟lego_body.prt(主體)之後接上lego_arm_rt.prt、lego_arm_lt.prt
2.加上lego_hand_lt.prt再來就將機器人的頭加上lego_head.prt
3.在接上lego_waist.prt再來就將雙腿接上
4.最後將lego_head.prt及lego_hat.prt
機器人組合就完成了，
之後利用爆炸圖可以得到爆炸後的各零件但需要再調整一下位置，就能完成良好的爆炸圖即可完成作業
這是一個組合圖教學珍貴的經驗，一個了解自動組合程式的機會。
 
 
任務二: 請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

　小組vedio:  https://vimeo.com/95872800

 
　小組copy.com: https://copy.com/kJl91O34CfvA
 
 
任務三: 請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別? 請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分)

 
 　lego_man 自動組立程式組出來的Feat ID是40 41 42 的零件載入裝配.
　lego_parts_edu.7z 中下載的 lego_man 零件卻不是這樣順序的...
　這代表他不是一次就組起來的

===


w14

任務 1 (5 分): 請以 Creo 開啟 remsub6.asm, 本任務要求各組員以手動組立完成此一零件組立.

任務 2 (5 分): 請將任務 1 手動組立流程拍成 flv 檔案後, 分別上傳到 copy.com 與 Vimeo 網站, 
並將個人心得與相關連結放入各組協同報告中.

40123136
copy : https://copy.com/fWOEHMmsKmGY
vimeo : https://vimeo.com/96551591

心得 :

這周跟上周一樣但是這周比較麻煩一點,零件太多要一個一個找
但做過一遍就會很順了


40123144

copy : https://copy.com/rHzHW0BignL6
         https://copy.com/hJTYJkVOPDNO

心得 :
   
這次手動組裝樂高零件看似簡單但是由於我們對
creo不了解所以失敗了非常多次。
可是不斷努力以及以及同學互相幫忙便可以完成了         
         
         

任務 3 (5 分): 請修改上週小人偶自動組立程式, 以組為單位, 將組立命名為 remsub6 函式, 
remsub6, 可以完成自動組立, 操作完成後, 請將分組心得與相關連結放入各組協同報告中.





===



這裡是結果與討論





網際鼓式煞車設計(2ag15)
===

有關鼓式煞車

程式設計架構
===

鼓式煞車

結果與討論
===

這裡是結果與討論

網際鼓式煞車設計(2ag16)
===

有關鼓式煞車

程式設計架構
===

鼓式煞車

結果與討論
===

這裡是結果與討論


組員
===
40123137 陳家暐
40123154 謝正利
40123158 蔡宗霖

第八週摘要報告
===

以協同方式寫Wiki

本文目的在於讓學生利用開發的wiki與應用快速原型的協作式寫作的開發方法。而本文也由定性數據收集和分析方法的來評價。
最後，對於協作方式來寫作的方式，其影響極其討論協議到組別與軟件開發方面的考慮和教學相關的要求問題
研究方法 wiki的協作式寫作，基於設計的研究包括以下四個步驟：
1. 研究的現狀與認識目的並審查與wiki的協作式寫作相關的問題。
2. wiki將用於促進以協同方式寫作來設計，參與和群體互動。
3. 使用多種方法收集其經驗數據。
4. 通過系統的評價分析，並通過各種方法收集資料。分析，設計，實施和評價是相互共存的。而缺點提出於每個週期提出，重新設計，重新實現，並重新評估。
維基應用域教育在協同方式寫作方法而成的Wiki是適用於多種情況，期望得到的wiki應用在學習投資效益與協同方式來寫作。它十分靈活的，足以適應的專業條件。更具體地，它的應用領域包括不同級別的更高教育，從研究生到社會教育。除了協同寫作與學科相關，維基可以為一些應用程序的開發系統來使用，如產生教材，網路上互相評論，並收集數據於一種項目。


結論和未來研究方向
1. 這項結果不能限制於狹小的研究的範圍，即使調查結果反映了那些報導中的一致性研究文獻。
2. 用來判斷以不同方式來呈現協同，尤其是同組評議，這擁有極高的教育價值與分析性思維，並參與交流。可以促進團體間的合作和時間，wiki打開了協同寫作上新的視野，而小組互動絕不是容易的事情，解決了技術，教學和文化各種問題。
未來的工作將更顯的協同的重要性，wiki以此設計為基礎下更加精進。重要的是，它更進一步影響高等教育對於wiki的使用。最後，它也進一步實踐於系統評論的基礎



第九週摘要報告
===

題目一 :請寫一個執行時可以列出以十為底對數表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.

資料 :
https://bitbucket.org/40123158/test

題目三 : 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式, 接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數, 按下送出鍵後, 程式會列出以此兩個整數為基底的乘法表, 例如: 若兩個欄位都輸入: 9, 則列出九九乘法表, 若輸入 9, 20, 則列出 9×20 的乘法表.

資料 : 第17組dokuwiki , 新增 abc001 ~ abc399 用戶資料
http://wikig17-weis.rhcloud.com/doku.php?id=start

上傳影片- 個人Vimeo
https://vimeo.com/92577964

Bitbucket 連結
https://bitbucket.org/40123137/week9
Bitbucket 連結
https://bitbucket.org/40123137/week9



第13週
===

wiki連結:
https://wiki.mde.tw/doku.php?id=2014s2a:%E7%AC%AC%E5%8D%81%E4%B8%83%E7%B5%84:40123137:w13

第十三週-lego手動組立影片
https://vimeo.com/95820147

第14週
===

40123137

W14 任務影片-40123137
https://vimeo.com/96548750
https://www.copy.com/browse/copy/w14.flv

W14 任務組合檔
https://www.copy.com/browse/copy/w14.asm.1

心得
===

本週得分 10分


第15週
===

40123137

W14 任務影片-40123137
https://vimeo.com/97186451
https://www.copy.com/browse/copy/w15_37.flv

W14 任務組合檔
https://www.copy.com/browse/copy/w15_37.1

心得
===

本週得分 10分





協同產品設計實習專案(2ag18)

===============

組員:

40123126 柯嘉洋

40123128 胡瀚中

40123149 蔡東維


===============

OpenShift:


===============

第十三週任務:


任務一:

  40123149:
    
    步驟:建立新的組立檔，後依序步驟逐漸組裝，而插入Lego零件的順序有影響，
        如果胡亂插入會有無法組裝的問題，所以要特別注意，而每次插入零件檔
        時要先調整好位置並藉由基準面與基準面對齊，便可完成。
    
        解題步驟圖片: https://copy.com/gHzVnqHZnpZt
        
    心得:經過這次的試題後，組裝零件要考慮的事情也是很多的。






2ag21

組員: 40023143、40123143、40123145、40123156

本組CMSimply網站: http://cmsimply-40123156.rhcloud.com/

===
第十三週

任務一: 請以手動方式, 從下方下載 lego_man.7z 零件, 完成組立後, 以組員為單位, 在各分組報告區詳細說明組立過程的重點與注意事項. (5 分)

任務二: 請利用 Vimeo 及 copy.com 存放任務一中的手動組立流程影片檔案, 以組員為單位, 將連結放入各分組報告區中. (5 分)

任務三: 請仔細觀察協同程式中的 lego_man 自動組立程式, 並且從下方 lego_parts_edu.7z 中下載相同名稱的 lego_man 零件, 
請詳細比較兩個壓縮檔案解開的 lego_man 零件檔案, 有哪些差別? 請將詳細比對結果以組為單位將資料放入各分組的報告中. (5 分)

===
第十三週 (40023143)

任務一:
  1.開啟lego_body.prt利用重合將開啟後的lego_arm_rt.prt和lego_arm_lt.prt接上，再改變角度。
  2.開啟lego_hand_lt.prt接上lego_arm_rt.prt和lego_arm_lt.prt完成身體與手
  3.開啟lego_head.prt接在身體上在開啟lego_hat.prt完成頭的部分
  4.開啟lego_waist.prt接在身體下。
  5.最後開啟lego_leg.prt和lego_waist.prt接合，完成lego_men
  6.利用爆炸圖的功能將lego_man爆炸。
  心得：利用creo將各個零件組合起來，真的很有趣。
  但因為操作不順和錄製程式的畫質調太低，影片不太成功，
  但是確實體會了creo的方便，利用雲端將畫好的檔案下載，再利用creo將複雜的零件組合，真的可以大大提升工作效率。

任務二: 
  Vimeo: https://vimeo.com/95867694
  copy.com: https://www.copy.com/s/DEGh0OTCbkDD/3330.flv

任務三: 
  lego_man 利用自動組立程式組出來的Feat ID的排序是40、41、42 、43......以此類推，
  一個一個零件檔載入裝配； 而lego_parts_edu.7z 中下載相同名稱的 lego_man 零件檔卻
  不是這樣排序的， 表是lego_man不是一次就組起來，途中應該有改變、刪除......等程序。

===
第十三週 (40123143)

任務一: 
  首先，先開啟lego_body.prt(主體)之後接上lego_arm_rt.prt、lego_arm_lt.prt之後再加上
  lego_hand_lt.prt再來就將機器人的頭加上lego_head.prt，在接上lego_waist.prt再來就將
  雙腿接上最後將lego_head.prt及lego_hat.prt，機器人組合就完成了，最後利用爆炸圖可以
  得到爆炸後的各零件但需要在調整一下位置，就能完成良好爆炸圖即可完成作業，謝謝老師
  的教導，這是一個很特別的組合圖教學，希望能快點了解自動組合程式。

===
第十三週 (40123156)

任務一: 
  組立過程為
    1.開啟creo
    2.新建"組立"
    3.用"插入"功能加入零件
    4.設定零件間的限制條件
  注意事項為
    設定零件間的限制條件
    要盡量設定到零件完全不能移動

任務二:
  Vimeo: https://vimeo.com/95857245
  copy.com: https://copy.com/zJSJ6ZVGdtsy

任務三:
  lego_parts_edu.7z裡的樂高零件比較多
  可是組合起來卻沒有太大差異，第二個壓
  縮檔裡的零件可能是分成更細小的零件。


網際 OpenJSCAD 程式設計(coursemdetw)
===

將 Spur 改為凸輪零件成型

設計程式架構
===

定義凸輪設計公式

結果與討論
===

有關凸倫程式設計的結果與討論


